

kubectl get services 
kubectl get pods --all-namespaces -a 
kubectl -n onap get services|grep "portal-app"
helm search -l
kubectl get pods --all-namespaces -o=wide
kubectl delete pod dev-vnfsdk-7fbcbc597f-xwrkk  -n  onap
   27  helm upgrade --set  replicaCount=3 onap/uui/server
   28  kubectl delete pod kubernetes-dashboard-f9577fffd-sjbgf  -n  onap
   29  kubectl delete pod kubernetes-dashboard-f9577fffd-sjbgf  -n  kube-system
   30  kubectl delete pod monitoring-grafana-997796fcf-c82kg  -n  kube-system
   31  kubectl delete pod monitoring-influxdb-56fdcd96b-7xfbn  -n  kube-system
   32  kubectl delete pod tiller-deploy-54bcc55dd5-9bl77  -n  kube-system

Get the pod name via
kubectl get pods --all-namespaces -o wide

bash into the pod via

kubectl exec  -it  -n onap  dev-robot-7776fd8cd4-f5pjz   -c  robot   -- /bin/bash
helm  serve &
helm upgrade --install  dev  local/onap  --version  2.0.0  -f  oom/kubernetes/robot/dev-env.yaml --namespace  onap  --debug

kubectl get pods --all-namespaces -a
kubectl get pods --all-namespaces  -o=wide

helm delete --dry-run beijing
helm delete --purge beijing

Robot
./demo-k8s.sh onap init_robot

cd to ~/oom/kuberneties/robot

robot is shell scripts are here and if you look at them they are finding the pod name and then executing robot inside the robot docker container that helm install/upgrade started,

./ete-k8s.sh onap health  # to do the basic sanity health check to confirm things are up and responding to their health request ( kubectl -n onap get pods  will also show if all the pods are up but you really need both tests)

./demo-k8s.sh onap init_robot  # to set the login/password on the robot container. Can also kubectl exec into the robot container and create /etc/lighttpd/authorization  with the login:password

./demo-k8s.sh onap init   # to do initial creation of customer , set project dependencies for drop down in VID and initial onboard and distribution of models (vFW, vLB, vFWCL, vCPE) - can take a long time since the script is serial.

./demo-k8s.sh onap healthdist  (does just a vFW distribution so faster than init if you are seeing distribution failures)

./demo-k8s.sh onap instantiateVFW # does a vFW onboard/distribute/instantiate and leaves it running



install ceph-common package



helm deploy local/dmaap --version 3.0.0 --set enableDebug=true
helm undeploy dev-dmaap local/onap --namespace onap  --verbose
helm undeploy dev-dmaap --purge
deleted dmaap-dr database à rm -rf dr-db/
changed values.yaml to have initialDelaySeconds: 200 , both in liveness and rediness
make; make onap
helm deploy dev-dmaap local/onap --namespace onap –verbose

helm deploy dev-dmaap  local/onap  --version  3.0.0   --namespace  onap  --verbose
helm undeploy dev-dmaap local/onap --namespace onap  --verbose
 

